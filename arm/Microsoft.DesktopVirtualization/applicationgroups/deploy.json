{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Required. Name of the Application Group to create this application in."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all resources."
      }
    },
    "applicationGroupType": {
      "type": "string",
      "allowedValues": [
        "RemoteApp",
        "Desktop"
      ],
      "metadata": {
        "description": "Required. The type of the Application Group to be created. Allowed values: RemoteApp or Desktop"
      }
    },
    "hostpoolName": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the Host Pool to be linked to this Application Group."
      }
    },
    "friendlyName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The friendly name of the Application Group to be created."
      }
    },
    "description": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The description of the Application Group to be created."
      }
    },
    "roleAssignments": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalIds' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'"
      }
    },
    "diagnosticLogsRetentionInDays": {
      "type": "int",
      "defaultValue": 365,
      "maxValue": 365,
      "minValue": 0,
      "metadata": {
        "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
      }
    },
    "diagnosticStorageAccountId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource ID of the diagnostic storage account."
      }
    },
    "diagnosticWorkspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource ID of log analytics."
      }
    },
    "diagnosticEventHubAuthorizationRuleId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource ID of the diagnostic event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
      }
    },
    "diagnosticEventHubName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Name of the diagnostic event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
      }
    },
    "lock": {
      "type": "string",
      "defaultValue": "NotSpecified",
      "metadata": {
        "description": "Optional. Specify the type of lock."
      },
      "allowedValues": [
        "CanNotDelete",
        "NotSpecified",
        "ReadOnly"
      ]
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Tags of the resource."
      }
    },
    "cuaId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Customer Usage Attribution ID (GUID). This GUID must be previously registered"
      }
    },
    "logsToEnable": {
      "type": "array",
      "defaultValue": [
        "Checkpoint",
        "Error",
        "Management"
      ],
      "allowedValues": [
        "Checkpoint",
        "Error",
        "Management"
      ],
      "metadata": {
        "description": "Optional. The name of logs that will be streamed."
      }
    },
    "applications": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. List of applications to be created in the Application Group."
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "diagnosticsLogs",
        "count": "[length(parameters('logsToEnable'))]",
        "input": {
          "category": "[parameters('logsToEnable')[copyIndex('diagnosticsLogs')]]",
          "enabled": true,
          "retentionPolicy": {
            "enabled": true,
            "days": "[parameters('diagnosticLogsRetentionInDays')]"
          }
        }
      }
    ]
  },
  "resources": [
    {
      "type": "Microsoft.DesktopVirtualization/applicationGroups",
      "apiVersion": "2021-07-12",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "hostPoolArmPath": "[resourceId('Microsoft.DesktopVirtualization/hostPools', parameters('hostpoolName'))]",
        "friendlyName": "[parameters('friendlyName')]",
        "description": "[parameters('description')]",
        "applicationGroupType": "[parameters('applicationGroupType')]"
      }
    },
    {
      "condition": "[not(equals(parameters('lock'), 'NotSpecified'))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2017-04-01",
      "scope": "[format('Microsoft.DesktopVirtualization/applicationGroups/{0}', parameters('name'))]",
      "name": "[format('{0}-{1}-lock', parameters('name'), parameters('lock'))]",
      "properties": {
        "level": "[parameters('lock')]",
        "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('name'))]"
      ]
    },
    {
      "condition": "[or(or(or(not(empty(parameters('diagnosticStorageAccountId'))), not(empty(parameters('diagnosticWorkspaceId')))), not(empty(parameters('diagnosticEventHubAuthorizationRuleId')))), not(empty(parameters('diagnosticEventHubName'))))]",
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.DesktopVirtualization/applicationGroups/{0}', parameters('name'))]",
      "name": "[format('{0}-diagnosticSettings', parameters('name'))]",
      "properties": {
        "storageAccountId": "[if(not(empty(parameters('diagnosticStorageAccountId'))), parameters('diagnosticStorageAccountId'), null())]",
        "workspaceId": "[if(not(empty(parameters('diagnosticWorkspaceId'))), parameters('diagnosticWorkspaceId'), null())]",
        "eventHubAuthorizationRuleId": "[if(not(empty(parameters('diagnosticEventHubAuthorizationRuleId'))), parameters('diagnosticEventHubAuthorizationRuleId'), null())]",
        "eventHubName": "[if(not(empty(parameters('diagnosticEventHubName'))), parameters('diagnosticEventHubName'), null())]",
        "logs": "[variables('diagnosticsLogs')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('name'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('cuaId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('pid-{0}', parameters('cuaId'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {},
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "copy": {
        "name": "appGroup_applications",
        "count": "[length(parameters('applications'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-AppGroup-App-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('applications')[copyIndex()].name]"
          },
          "appGroupName": {
            "value": "[parameters('name')]"
          },
          "description": {
            "value": "[if(contains(parameters('applications')[copyIndex()], 'description'), parameters('applications')[copyIndex()].description, '')]"
          },
          "friendlyName": {
            "value": "[if(contains(parameters('applications')[copyIndex()], 'friendlyName'), parameters('applications')[copyIndex()].friendlyName, parameters('name'))]"
          },
          "filePath": {
            "value": "[parameters('applications')[copyIndex()].filePath]"
          },
          "commandLineSetting": {
            "value": "[if(contains(parameters('applications')[copyIndex()], 'commandLineSetting'), parameters('applications')[copyIndex()].commandLineSetting, 'DoNotAllow')]"
          },
          "commandLineArguments": {
            "value": "[if(contains(parameters('applications')[copyIndex()], 'commandLineArguments'), parameters('applications')[copyIndex()].commandLineArguments, '')]"
          },
          "showInPortal": {
            "value": "[if(contains(parameters('applications')[copyIndex()], 'showInPortal'), parameters('applications')[copyIndex()].showInPortal, false())]"
          },
          "iconPath": {
            "value": "[if(contains(parameters('applications')[copyIndex()], 'iconPath'), parameters('applications')[copyIndex()].iconPath, parameters('applications')[copyIndex()].filePath)]"
          },
          "iconIndex": {
            "value": "[if(contains(parameters('applications')[copyIndex()], 'iconIndex'), parameters('applications')[copyIndex()].iconIndex, 0)]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "appGroupName": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the Application Group to create the application(s) in."
              }
            },
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the Application to be created in the Application Group."
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Description of Application.."
              }
            },
            "friendlyName": {
              "type": "string",
              "metadata": {
                "description": "Required. Friendly name of Application.."
              }
            },
            "filePath": {
              "type": "string",
              "metadata": {
                "description": "Required. Specifies a path for the executable file for the application."
              }
            },
            "commandLineSetting": {
              "type": "string",
              "defaultValue": "DoNotAllow",
              "metadata": {
                "description": "Optional. Specifies whether this published application can be launched with command-line arguments provided by the client, command-line arguments specified at publish time, or no command-line arguments at all."
              },
              "allowedValues": [
                "Allow",
                "DoNotAllow",
                "Require"
              ]
            },
            "commandLineArguments": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Command-Line Arguments for Application."
              }
            },
            "showInPortal": {
              "type": "bool",
              "defaultValue": false,
              "metadata": {
                "description": "Optional. Specifies whether to show the RemoteApp program in the RD Web Access server."
              }
            },
            "iconPath": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Path to icon."
              }
            },
            "iconIndex": {
              "type": "int",
              "defaultValue": 0,
              "metadata": {
                "description": "Optional. Index of the icon."
              }
            },
            "cuaId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Customer Usage Attribution ID (GUID). This GUID must be previously registered"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.DesktopVirtualization/applicationGroups/applications",
              "apiVersion": "2021-07-12",
              "name": "[format('{0}/{1}', parameters('appGroupName'), parameters('name'))]",
              "properties": {
                "description": "[parameters('description')]",
                "friendlyName": "[parameters('friendlyName')]",
                "filePath": "[parameters('filePath')]",
                "commandLineSetting": "[parameters('commandLineSetting')]",
                "commandLineArguments": "[parameters('commandLineArguments')]",
                "showInPortal": "[parameters('showInPortal')]",
                "iconPath": "[parameters('iconPath')]",
                "iconIndex": "[parameters('iconIndex')]"
              }
            },
            {
              "condition": "[not(empty(parameters('cuaId')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}', parameters('cuaId'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            }
          ],
          "outputs": {
            "applicationResourceIds": {
              "type": "string",
              "value": "[resourceId('Microsoft.DesktopVirtualization/applicationGroups/applications', parameters('appGroupName'), parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the deployed Application."
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The name of the Resource Group the AVD Application was created in."
              }
            },
            "name": {
              "type": "string",
              "value": "[parameters('appGroupName')]",
              "metadata": {
                "description": "The Name of the Application Group to register the Application in."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('name'))]"
      ]
    },
    {
      "copy": {
        "name": "appGroup_rbac",
        "count": "[length(parameters('roleAssignments'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-AppGroup-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalIds": {
            "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
          },
          "roleDefinitionIdOrName": {
            "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('name'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "principalIds": {
              "type": "array"
            },
            "roleDefinitionIdOrName": {
              "type": "string"
            },
            "resourceId": {
              "type": "string"
            }
          },
          "variables": {
            "builtInRoleNames": {
              "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
              "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
              "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
              "Application Group Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'ca6382a4-1721-4bcf-a114-ff0c70227b6b')]",
              "Desktop Virtualization Application Group Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '86240b0e-9422-4c43-887b-b61143f32ba8')]",
              "Desktop Virtualization Application Group Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'aebf23d0-b568-4e86-b8f9-fe83a2c6ab55')]",
              "Desktop Virtualization Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '082f0a83-3be5-4ba1-904c-961cca79b387')]",
              "Desktop Virtualization Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '49a72310-ab8d-41df-bbb0-79b649203868')]",
              "Desktop Virtualization User": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '1d18fff3-a72a-46b5-b4a9-0b38a3cd7e63')]",
              "Desktop Virtualization Workspace Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '21efdde3-836f-432b-bf3d-3e8e734d4b2b')]",
              "Desktop Virtualization Workspace Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '0fa44ee9-7a7d-466b-9bb2-2bf446b1204d')]",
              "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
              "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
              "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
              "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
              "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
              "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
              "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
              "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
              "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
              "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "roleAssignment",
                "count": "[length(parameters('principalIds'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2021-04-01-preview",
              "scope": "[format('Microsoft.DesktopVirtualization/applicationGroups/{0}', last(split(parameters('resourceId'), '/')))]",
              "name": "[guid(last(split(parameters('resourceId'), '/')), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
              "properties": {
                "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                "principalId": "[parameters('principalIds')[copyIndex()]]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "resourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.DesktopVirtualization/applicationGroups', parameters('name'))]",
      "metadata": {
        "description": "The resource ID  of the AVD application group"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "The resource group the AVD application group was deployed into"
      }
    },
    "name": {
      "type": "string",
      "value": "[parameters('name')]",
      "metadata": {
        "description": "The name of the AVD application group"
      }
    }
  }
}
