{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. The name of the disk that is being created."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Resource location."
      }
    },
    "sku": {
      "type": "string",
      "metadata": {
        "description": "Required. The disks sku name. Can be ."
      },
      "allowedValues": [
        "Standard_LRS",
        "Premium_LRS",
        "StandardSSD_LRS",
        "UltraSSD_LRS",
        "Premium_ZRS",
        "Premium_ZRS"
      ]
    },
    "burstingEnabled": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Set to true to enable bursting beyond the provisioned performance target of the disk."
      }
    },
    "completionPercent": {
      "type": "int",
      "defaultValue": 100,
      "metadata": {
        "description": "Optional. Percentage complete for the background copy when a resource is created via the CopyStart operation."
      }
    },
    "createOption": {
      "type": "string",
      "defaultValue": "Empty",
      "metadata": {
        "description": "Optional. Sources of a disk creation."
      },
      "allowedValues": [
        "Attach",
        "Copy",
        "CopyStart",
        "Empty",
        "FromImage",
        "Import",
        "ImportSecure",
        "Restore",
        "Upload",
        "UploadPreparedSecure"
      ]
    },
    "imageReferenceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. A relative uri containing either a Platform Image Repository or user image reference."
      }
    },
    "logicalSectorSize": {
      "type": "int",
      "defaultValue": 4096,
      "metadata": {
        "description": "Optional. Logical sector size in bytes for Ultra disks. Supported values are 512 ad 4096."
      }
    },
    "securityDataUri": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. If create option is ImportSecure, this is the URI of a blob to be imported into VM guest state."
      }
    },
    "sourceResourceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. If create option is Copy, this is the ARM id of the source snapshot or disk."
      }
    },
    "sourceUri": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. If create option is Import, this is the URI of a blob to be imported into a managed disk."
      }
    },
    "storageAccountId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Required if create option is Import. The Azure Resource Manager identifier of the storage account containing the blob to import as a disk"
      }
    },
    "uploadSizeBytes": {
      "type": "int",
      "defaultValue": 20972032,
      "metadata": {
        "description": "Optional. If create option is Upload, this is the size of the contents of the upload including the VHD footer."
      }
    },
    "diskSizeGB": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. If create option is empty, this field is mandatory and it indicates the size of the disk to create."
      }
    },
    "diskIOPSReadWrite": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. The number of IOPS allowed for this disk; only settable for UltraSSD disks."
      }
    },
    "diskMBpsReadWrite": {
      "type": "int",
      "defaultValue": 0,
      "metadata": {
        "description": "Optional. The bandwidth allowed for this disk; only settable for UltraSSD disks."
      }
    },
    "hyperVGeneration": {
      "type": "string",
      "defaultValue": "V2",
      "metadata": {
        "description": "Optional. The hypervisor generation of the Virtual Machine. Applicable to OS disks only."
      },
      "allowedValues": [
        "V1",
        "V2"
      ]
    },
    "maxShares": {
      "type": "int",
      "defaultValue": 1,
      "metadata": {
        "description": "Optional. The maximum number of VMs that can attach to the disk at the same time. Default value is 0."
      }
    },
    "networkAccessPolicy": {
      "type": "string",
      "defaultValue": "DenyAll",
      "metadata": {
        "description": "Optional. Policy for accessing the disk via network."
      },
      "allowedValues": [
        "AllowAll",
        "AllowPrivate",
        "DenyAll"
      ]
    },
    "osType": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Sources of a disk creation."
      },
      "allowedValues": [
        "Windows",
        "Linux",
        ""
      ]
    },
    "publicNetworkAccess": {
      "type": "string",
      "defaultValue": "Disabled",
      "metadata": {
        "description": "Optional. Policy for controlling export on the disk."
      },
      "allowedValues": [
        "Disabled",
        "Enabled"
      ]
    },
    "acceleratedNetwork": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. True if the image from which the OS disk is created supports accelerated networking."
      }
    },
    "lock": {
      "type": "string",
      "defaultValue": "NotSpecified",
      "metadata": {
        "description": "Optional. Specify the type of lock."
      },
      "allowedValues": [
        "CanNotDelete",
        "NotSpecified",
        "ReadOnly"
      ]
    },
    "roleAssignments": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Tags of the availability set resource."
      }
    },
    "cuaId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Customer Usage Attribution ID (GUID). This GUID must be previously registered"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Compute/disks",
      "apiVersion": "2021-08-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "sku": {
        "name": "[parameters('sku')]"
      },
      "properties": {
        "burstingEnabled": "[parameters('burstingEnabled')]",
        "completionPercent": "[parameters('completionPercent')]",
        "creationData": {
          "createOption": "[parameters('createOption')]",
          "imageReference": "[if(not(equals(parameters('createOption'), 'FromImage')), null(), createObject('id', parameters('imageReferenceId')))]",
          "logicalSectorSize": "[if(contains(parameters('sku'), 'Ultra'), parameters('logicalSectorSize'), null())]",
          "securityDataUri": "[if(equals(parameters('createOption'), 'ImportSecure'), parameters('securityDataUri'), null())]",
          "sourceResourceId": "[if(equals(parameters('createOption'), 'Copy'), parameters('sourceResourceId'), null())]",
          "sourceUri": "[if(equals(parameters('createOption'), 'Import'), parameters('sourceUri'), null())]",
          "storageAccountId": "[if(equals(parameters('createOption'), 'Import'), parameters('storageAccountId'), null())]",
          "uploadSizeBytes": "[if(equals(parameters('createOption'), 'Upload'), parameters('uploadSizeBytes'), null())]"
        },
        "diskIOPSReadWrite": "[if(contains(parameters('sku'), 'Ultra'), parameters('diskIOPSReadWrite'), null())]",
        "diskMBpsReadWrite": "[if(contains(parameters('sku'), 'Ultra'), parameters('diskMBpsReadWrite'), null())]",
        "diskSizeGB": "[if(equals(parameters('createOption'), 'Empty'), parameters('diskSizeGB'), null())]",
        "hyperVGeneration": "[if(empty(parameters('osType')), null(), parameters('hyperVGeneration'))]",
        "maxShares": "[parameters('maxShares')]",
        "networkAccessPolicy": "[parameters('networkAccessPolicy')]",
        "osType": "[if(empty(parameters('osType')), null(), parameters('osType'))]",
        "publicNetworkAccess": "[parameters('publicNetworkAccess')]",
        "supportedCapabilities": "[if(empty(parameters('osType')), createObject(), createObject('acceleratedNetwork', parameters('acceleratedNetwork')))]"
      }
    },
    {
      "condition": "[not(equals(parameters('lock'), 'NotSpecified'))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2017-04-01",
      "scope": "[format('Microsoft.Compute/disks/{0}', parameters('name'))]",
      "name": "[format('{0}-{1}-lock', parameters('name'), parameters('lock'))]",
      "properties": {
        "level": "[parameters('lock')]",
        "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('name'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('cuaId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('pid-{0}', parameters('cuaId'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {},
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "copy": {
        "name": "disk_rbac",
        "count": "[length(parameters('roleAssignments'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-AvSet-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalIds": {
            "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
          },
          "roleDefinitionIdOrName": {
            "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.Compute/disks', parameters('name'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "principalIds": {
              "type": "array"
            },
            "roleDefinitionIdOrName": {
              "type": "string"
            },
            "resourceId": {
              "type": "string"
            }
          },
          "variables": {
            "builtInRoleNames": {
              "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
              "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
              "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
              "Avere Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4f8fab4f-1852-4a58-a46a-8eaf358af14a')]",
              "Disk Backup Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3e5e47e6-65f7-47ef-90b5-e5dd4d455f24')]",
              "Disk Pool Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '60fc6e62-5479-42d4-8bf4-67625fcc2840')]",
              "Disk Restore Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b50d9833-a0cb-478e-945f-707fcc997c13')]",
              "Disk Snapshot Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '7efff54f-a5b4-42b5-a1c5-5411624893ce')]",
              "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
              "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
              "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
              "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
              "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
              "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
              "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
              "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
              "Reservation Purchaser": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'f7b75c60-3036-4b75-91c3-6b41c27c1689')]",
              "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
              "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]",
              "Virtual Machine Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "roleAssignment",
                "count": "[length(parameters('principalIds'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2021-04-01-preview",
              "scope": "[format('Microsoft.Compute/disks/{0}', last(split(parameters('resourceId'), '/')))]",
              "name": "[guid(last(split(parameters('resourceId'), '/')), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
              "properties": {
                "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                "principalId": "[parameters('principalIds')[copyIndex()]]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Compute/disks', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "The resource group the  disk was deployed into"
      }
    },
    "resourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Compute/disks', parameters('name'))]",
      "metadata": {
        "description": "The resource ID of the disk"
      }
    },
    "name": {
      "type": "string",
      "value": "[parameters('name')]",
      "metadata": {
        "description": "The name of the disk"
      }
    }
  }
}
