{
  "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "maxLength": 64,
      "metadata": {
        "description": "Required. Specifies the name of the policy Set Definition (Initiative)."
      }
    },
    "displayName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The display name of the Set Definition (Initiative)"
      }
    },
    "description": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The Description name of the Set Definition (Initiative)"
      }
    },
    "managementGroupId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The group ID of the Management Group (Scope). Cannot be used with subscriptionId and does not support tenant level deployment (i.e. '/')"
      }
    },
    "subscriptionId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. The subscription ID of the subscription (Scope). Cannot be used with managementGroupId"
      }
    },
    "metadata": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The Set Definition (Initiative) metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
      }
    },
    "policyDefinitions": {
      "type": "array",
      "metadata": {
        "description": "Required. The array of Policy definitions object to include for this policy set. Each object must include the Policy definition ID, and optionally other properties like parameters"
      }
    },
    "policyDefinitionGroups": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. The metadata describing groups of policy definition references within the Policy Set Definition (Initiative)."
      }
    },
    "parameters": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The Set Definition (Initiative) parameters that can be used in policy definition references."
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[deployment().location]",
      "metadata": {
        "description": "Optional. Location for all resources."
      }
    }
  },
  "resources": [
    {
      "condition": "[and(empty(parameters('subscriptionId')), not(empty(parameters('managementGroupId'))))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-PolicySetDefinition-MG-Module', uniqueString(deployment().name, parameters('location')))]",
      "scope": "[format('Microsoft.Management/managementGroups/{0}', parameters('managementGroupId'))]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('name')]"
          },
          "displayName": {
            "value": "[if(not(empty(parameters('displayName'))), parameters('displayName'), '')]"
          },
          "description": {
            "value": "[if(not(empty(parameters('description'))), parameters('description'), '')]"
          },
          "metadata": {
            "value": "[if(not(empty(parameters('metadata'))), parameters('metadata'), createObject())]"
          },
          "parameters": {
            "value": "[if(not(empty(parameters('parameters'))), parameters('parameters'), createObject())]"
          },
          "policyDefinitions": {
            "value": "[parameters('policyDefinitions')]"
          },
          "policyDefinitionGroups": {
            "value": "[if(not(empty(parameters('policyDefinitionGroups'))), parameters('policyDefinitionGroups'), createArray())]"
          },
          "managementGroupId": {
            "value": "[parameters('managementGroupId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-08-01/managementGroupDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "name": {
              "type": "string",
              "maxLength": 64,
              "metadata": {
                "description": "Required. Specifies the name of the policy Set Definition (Initiative)."
              }
            },
            "displayName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The display name of the Set Definition (Initiative)"
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The Description name of the Set Definition (Initiative)"
              }
            },
            "managementGroupId": {
              "type": "string",
              "metadata": {
                "description": "Required. The group ID of the Management Group"
              }
            },
            "metadata": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The Set Definition (Initiative) metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
              }
            },
            "policyDefinitions": {
              "type": "array",
              "metadata": {
                "description": "Required. The array of Policy definitions object to include for this policy set. Each object must include the Policy definition ID, and optionally other properties like parameters"
              }
            },
            "policyDefinitionGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The metadata describing groups of policy definition references within the Policy Set Definition (Initiative)."
              }
            },
            "parameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The Set Definition (Initiative) parameters that can be used in policy definition references."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policySetDefinitions",
              "apiVersion": "2021-06-01",
              "name": "[parameters('name')]",
              "properties": {
                "policyType": "Custom",
                "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                "policyDefinitions": "[parameters('policyDefinitions')]",
                "policyDefinitionGroups": "[if(not(empty(parameters('policyDefinitionGroups'))), parameters('policyDefinitionGroups'), createArray())]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "Policy Set Definition Name"
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Authorization/policySetDefinitions', parameters('name'))]",
              "metadata": {
                "description": "Policy Set Definition resource ID"
              }
            }
          }
        }
      }
    },
    {
      "condition": "[and(empty(parameters('managementGroupId')), not(empty(parameters('subscriptionId'))))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-PolicySetDefinition-Sub-Module', uniqueString(deployment().name, parameters('location')))]",
      "subscriptionId": "[parameters('subscriptionId')]",
      "location": "[deployment().location]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "name": {
            "value": "[parameters('name')]"
          },
          "displayName": {
            "value": "[if(not(empty(parameters('displayName'))), parameters('displayName'), '')]"
          },
          "description": {
            "value": "[if(not(empty(parameters('description'))), parameters('description'), '')]"
          },
          "metadata": {
            "value": "[if(not(empty(parameters('metadata'))), parameters('metadata'), createObject())]"
          },
          "parameters": {
            "value": "[if(not(empty(parameters('parameters'))), parameters('parameters'), createObject())]"
          },
          "policyDefinitions": {
            "value": "[parameters('policyDefinitions')]"
          },
          "policyDefinitionGroups": {
            "value": "[if(not(empty(parameters('policyDefinitionGroups'))), parameters('policyDefinitionGroups'), createArray())]"
          },
          "subscriptionId": {
            "value": "[parameters('subscriptionId')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2018-05-01/subscriptionDeploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "name": {
              "type": "string",
              "maxLength": 64,
              "metadata": {
                "description": "Required. Specifies the name of the policy Set Definition (Initiative)."
              }
            },
            "displayName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The display name of the Set Definition (Initiative)"
              }
            },
            "description": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. The Description name of the Set Definition (Initiative)"
              }
            },
            "subscriptionId": {
              "type": "string",
              "defaultValue": "[subscription().subscriptionId]",
              "metadata": {
                "description": "Optional. The subscription ID of the subscription"
              }
            },
            "metadata": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The Set Definition (Initiative) metadata. Metadata is an open ended object and is typically a collection of key-value pairs."
              }
            },
            "policyDefinitions": {
              "type": "array",
              "metadata": {
                "description": "Required. The array of Policy definitions object to include for this policy set. Each object must include the Policy definition ID, and optionally other properties like parameters"
              }
            },
            "policyDefinitionGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. The metadata describing groups of policy definition references within the Policy Set Definition (Initiative)."
              }
            },
            "parameters": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. The Set Definition (Initiative) parameters that can be used in policy definition references."
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.Authorization/policySetDefinitions",
              "apiVersion": "2021-06-01",
              "name": "[parameters('name')]",
              "properties": {
                "policyType": "Custom",
                "displayName": "[if(not(empty(parameters('displayName'))), parameters('displayName'), null())]",
                "description": "[if(not(empty(parameters('description'))), parameters('description'), null())]",
                "metadata": "[if(not(empty(parameters('metadata'))), parameters('metadata'), null())]",
                "parameters": "[if(not(empty(parameters('parameters'))), parameters('parameters'), null())]",
                "policyDefinitions": "[parameters('policyDefinitions')]",
                "policyDefinitionGroups": "[if(not(empty(parameters('policyDefinitionGroups'))), parameters('policyDefinitionGroups'), createArray())]"
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "Policy Set Definition Name"
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Authorization/policySetDefinitions', parameters('name'))]",
              "metadata": {
                "description": "Policy Set Definition resource ID"
              }
            }
          }
        }
      }
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "value": "[if(not(empty(parameters('managementGroupId'))), reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Resources/deployments', format('{0}-PolicySetDefinition-MG-Module', uniqueString(deployment().name, parameters('location')))), '2020-10-01').outputs.name.value, reference(subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('{0}-PolicySetDefinition-Sub-Module', uniqueString(deployment().name, parameters('location')))), '2020-10-01').outputs.name.value)]",
      "metadata": {
        "description": "Policy Set Definition Name"
      }
    },
    "resourceId": {
      "type": "string",
      "value": "[if(not(empty(parameters('managementGroupId'))), reference(extensionResourceId(tenantResourceId('Microsoft.Management/managementGroups', parameters('managementGroupId')), 'Microsoft.Resources/deployments', format('{0}-PolicySetDefinition-MG-Module', uniqueString(deployment().name, parameters('location')))), '2020-10-01').outputs.resourceId.value, reference(subscriptionResourceId(parameters('subscriptionId'), 'Microsoft.Resources/deployments', format('{0}-PolicySetDefinition-Sub-Module', uniqueString(deployment().name, parameters('location')))), '2020-10-01').outputs.resourceId.value)]",
      "metadata": {
        "description": "Policy Set Definition resource ID"
      }
    }
  }
}
