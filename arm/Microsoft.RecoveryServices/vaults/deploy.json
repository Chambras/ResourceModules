{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the Azure Recovery Service Vault"
      }
    },
    "backupStorageConfig": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The storage configuration for the Azure Recovery Service Vault"
      }
    },
    "cuaId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Customer Usage Attribution ID (GUID). This GUID must be previously registered"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all resources."
      }
    },
    "backupPolicies": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. List of all backup policies."
      }
    },
    "backupConfig": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The backup configuration."
      }
    },
    "protectionContainers": {
      "type": "array",
      "defaultValue": [],
      "minLength": 0,
      "metadata": {
        "description": "Optional. List of all protection containers."
      }
    },
    "diagnosticLogsRetentionInDays": {
      "type": "int",
      "defaultValue": 365,
      "maxValue": 365,
      "minValue": 0,
      "metadata": {
        "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
      }
    },
    "diagnosticStorageAccountId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource ID of the diagnostic storage account."
      }
    },
    "diagnosticWorkspaceId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource ID of the diagnostic log analytics workspace."
      }
    },
    "diagnosticEventHubAuthorizationRuleId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Resource ID of the diagnostic event hub authorization rule for the Event Hubs namespace in which the event hub should be created or streamed to."
      }
    },
    "diagnosticEventHubName": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Name of the diagnostic event hub within the namespace to which logs are streamed. Without this, an event hub is created for each log category."
      }
    },
    "roleAssignments": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'"
      }
    },
    "lock": {
      "type": "string",
      "defaultValue": "NotSpecified",
      "metadata": {
        "description": "Optional. Specify the type of lock."
      },
      "allowedValues": [
        "CanNotDelete",
        "NotSpecified",
        "ReadOnly"
      ]
    },
    "systemAssignedIdentity": {
      "type": "bool",
      "defaultValue": false,
      "metadata": {
        "description": "Optional. Enables system assigned managed identity on the resource."
      }
    },
    "userAssignedIdentities": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. The ID(s) to assign to the resource."
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Tags of the Recovery Service Vault resource."
      }
    },
    "logsToEnable": {
      "type": "array",
      "defaultValue": [
        "AzureBackupReport",
        "CoreAzureBackup",
        "AddonAzureBackupJobs",
        "AddonAzureBackupAlerts",
        "AddonAzureBackupPolicy",
        "AddonAzureBackupStorage",
        "AddonAzureBackupProtectedInstance",
        "AzureSiteRecoveryJobs",
        "AzureSiteRecoveryEvents",
        "AzureSiteRecoveryReplicatedItems",
        "AzureSiteRecoveryReplicationStats",
        "AzureSiteRecoveryRecoveryPoints",
        "AzureSiteRecoveryReplicationDataUploadRate",
        "AzureSiteRecoveryProtectedDiskDataChurn"
      ],
      "allowedValues": [
        "AzureBackupReport",
        "CoreAzureBackup",
        "AddonAzureBackupJobs",
        "AddonAzureBackupAlerts",
        "AddonAzureBackupPolicy",
        "AddonAzureBackupStorage",
        "AddonAzureBackupProtectedInstance",
        "AzureSiteRecoveryJobs",
        "AzureSiteRecoveryEvents",
        "AzureSiteRecoveryReplicatedItems",
        "AzureSiteRecoveryReplicationStats",
        "AzureSiteRecoveryRecoveryPoints",
        "AzureSiteRecoveryReplicationDataUploadRate",
        "AzureSiteRecoveryProtectedDiskDataChurn"
      ],
      "metadata": {
        "description": "Optional. The name of logs that will be streamed."
      }
    },
    "metricsToEnable": {
      "type": "array",
      "defaultValue": [
        "Health"
      ],
      "allowedValues": [
        "Health"
      ],
      "metadata": {
        "description": "Optional. The name of metrics that will be streamed."
      }
    }
  },
  "variables": {
    "copy": [
      {
        "name": "diagnosticsLogs",
        "count": "[length(parameters('logsToEnable'))]",
        "input": {
          "category": "[parameters('logsToEnable')[copyIndex('diagnosticsLogs')]]",
          "enabled": true,
          "retentionPolicy": {
            "enabled": true,
            "days": "[parameters('diagnosticLogsRetentionInDays')]"
          }
        }
      },
      {
        "name": "diagnosticsMetrics",
        "count": "[length(parameters('metricsToEnable'))]",
        "input": {
          "category": "[parameters('metricsToEnable')[copyIndex('diagnosticsMetrics')]]",
          "timeGrain": null,
          "enabled": true,
          "retentionPolicy": {
            "enabled": true,
            "days": "[parameters('diagnosticLogsRetentionInDays')]"
          }
        }
      }
    ],
    "identityType": "[if(parameters('systemAssignedIdentity'), if(not(empty(parameters('userAssignedIdentities'))), 'SystemAssigned,UserAssigned', 'SystemAssigned'), if(not(empty(parameters('userAssignedIdentities'))), 'UserAssigned', 'None'))]",
    "identity": "[if(not(equals(variables('identityType'), 'None')), createObject('type', variables('identityType'), 'userAssignedIdentities', if(not(empty(parameters('userAssignedIdentities'))), parameters('userAssignedIdentities'), null())), null())]"
  },
  "resources": [
    {
      "type": "Microsoft.RecoveryServices/vaults",
      "apiVersion": "2021-12-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "identity": "[variables('identity')]",
      "sku": {
        "name": "RS0",
        "tier": "Standard"
      },
      "properties": {}
    },
    {
      "condition": "[not(equals(parameters('lock'), 'NotSpecified'))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2017-04-01",
      "scope": "[format('Microsoft.RecoveryServices/vaults/{0}', parameters('name'))]",
      "name": "[format('{0}-{1}-lock', parameters('name'), parameters('lock'))]",
      "properties": {
        "level": "[parameters('lock')]",
        "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('name'))]"
      ]
    },
    {
      "condition": "[or(or(or(not(empty(parameters('diagnosticStorageAccountId'))), not(empty(parameters('diagnosticWorkspaceId')))), not(empty(parameters('diagnosticEventHubAuthorizationRuleId')))), not(empty(parameters('diagnosticEventHubName'))))]",
      "type": "Microsoft.Insights/diagnosticSettings",
      "apiVersion": "2021-05-01-preview",
      "scope": "[format('Microsoft.RecoveryServices/vaults/{0}', parameters('name'))]",
      "name": "[format('{0}-diagnosticSettings', parameters('name'))]",
      "properties": {
        "storageAccountId": "[if(not(empty(parameters('diagnosticStorageAccountId'))), parameters('diagnosticStorageAccountId'), null())]",
        "workspaceId": "[if(not(empty(parameters('diagnosticWorkspaceId'))), parameters('diagnosticWorkspaceId'), null())]",
        "eventHubAuthorizationRuleId": "[if(not(empty(parameters('diagnosticEventHubAuthorizationRuleId'))), parameters('diagnosticEventHubAuthorizationRuleId'), null())]",
        "eventHubName": "[if(not(empty(parameters('diagnosticEventHubName'))), parameters('diagnosticEventHubName'), null())]",
        "metrics": "[variables('diagnosticsMetrics')]",
        "logs": "[variables('diagnosticsLogs')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('name'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('cuaId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('pid-{0}', parameters('cuaId'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {},
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "condition": "[not(empty(parameters('backupStorageConfig')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-RSV-BackupStorageConfig', uniqueString(deployment().name, parameters('location')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "recoveryVaultName": {
            "value": "[parameters('name')]"
          },
          "storageModelType": {
            "value": "[parameters('backupStorageConfig').storageModelType]"
          },
          "crossRegionRestoreFlag": {
            "value": "[parameters('backupStorageConfig').crossRegionRestoreFlag]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "recoveryVaultName": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the Azure Recovery Service Vault"
              }
            },
            "name": {
              "type": "string",
              "defaultValue": "vaultstorageconfig",
              "metadata": {
                "description": "Optional. The name of the backup storage config"
              }
            },
            "storageModelType": {
              "type": "string",
              "defaultValue": "GeoRedundant",
              "allowedValues": [
                "GeoRedundant",
                "LocallyRedundant",
                "ReadAccessGeoZoneRedundant",
                "ZoneRedundant"
              ],
              "metadata": {
                "description": "Optional. Change Vault Storage Type (Works if vault has not registered any backup instance)"
              }
            },
            "crossRegionRestoreFlag": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. Opt in details of Cross Region Restore feature"
              }
            },
            "cuaId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Customer Usage Attribution ID (GUID). This GUID must be previously registered"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.RecoveryServices/vaults/backupstorageconfig",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', parameters('recoveryVaultName'), parameters('name'))]",
              "properties": {
                "storageModelType": "[parameters('storageModelType')]",
                "crossRegionRestoreFlag": "[parameters('crossRegionRestoreFlag')]"
              }
            },
            {
              "condition": "[not(empty(parameters('cuaId')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}', parameters('cuaId'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the backup storage config"
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.RecoveryServices/vaults/backupstorageconfig', parameters('recoveryVaultName'), parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the backup storage config"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The name of the Resource Group the backup storage configuration was created in."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('name'))]"
      ]
    },
    {
      "copy": {
        "name": "rsv_protectionContainers",
        "count": "[length(parameters('protectionContainers'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-RSV-ProtectionContainers-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "recoveryVaultName": {
            "value": "[parameters('name')]"
          },
          "name": {
            "value": "[parameters('protectionContainers')[copyIndex()].name]"
          },
          "sourceResourceId": {
            "value": "[parameters('protectionContainers')[copyIndex()].sourceResourceId]"
          },
          "friendlyName": {
            "value": "[parameters('protectionContainers')[copyIndex()].friendlyName]"
          },
          "backupManagementType": {
            "value": "[parameters('protectionContainers')[copyIndex()].backupManagementType]"
          },
          "containerType": {
            "value": "[parameters('protectionContainers')[copyIndex()].containerType]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "recoveryVaultName": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the Azure Recovery Service Vault"
              }
            },
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the Azure Recovery Service Vault Protection Container"
              }
            },
            "backupManagementType": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "AzureBackupServer",
                "AzureIaasVM",
                "AzureSql",
                "AzureStorage",
                "AzureWorkload",
                "DPM",
                "DefaultBackup",
                "Invalid",
                "MAB",
                ""
              ],
              "metadata": {
                "description": "Optional. Backup management type to execute the current Protection Container job."
              }
            },
            "sourceResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Resource ID of the target resource for the Protection Container "
              }
            },
            "friendlyName": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Friendly name of the Protection Container"
              }
            },
            "containerType": {
              "type": "string",
              "defaultValue": "",
              "allowedValues": [
                "AzureBackupServerContainer",
                "AzureSqlContainer",
                "GenericContainer",
                "Microsoft.ClassicCompute/virtualMachines",
                "Microsoft.Compute/virtualMachines",
                "SQLAGWorkLoadContainer",
                "StorageContainer",
                "VMAppContainer",
                "Windows",
                ""
              ],
              "metadata": {
                "description": "Optional. Type of the container"
              }
            },
            "cuaId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Customer Usage Attribution ID (GUID). This GUID must be previously registered"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/Azure/{1}', parameters('recoveryVaultName'), parameters('name'))]",
              "properties": {
                "sourceResourceId": "[if(not(empty(parameters('sourceResourceId'))), parameters('sourceResourceId'), null())]",
                "friendlyName": "[if(not(empty(parameters('friendlyName'))), parameters('friendlyName'), null())]",
                "backupManagementType": "[if(not(empty(parameters('backupManagementType'))), parameters('backupManagementType'), null())]",
                "containerType": "[if(not(empty(parameters('containerType'))), parameters('containerType'), null())]"
              }
            },
            {
              "condition": "[not(empty(parameters('cuaId')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}', parameters('cuaId'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            }
          ],
          "outputs": {
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The name of the Resource Group the Protection Container was created in."
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.RecoveryServices/vaults/backupFabrics/protectionContainers', split(format('{0}/Azure/{1}', parameters('recoveryVaultName'), parameters('name')), '/')[0], split(format('{0}/Azure/{1}', parameters('recoveryVaultName'), parameters('name')), '/')[1], split(format('{0}/Azure/{1}', parameters('recoveryVaultName'), parameters('name')), '/')[2])]",
              "metadata": {
                "description": "The resource ID of the Protection Container."
              }
            },
            "name": {
              "type": "string",
              "value": "[format('{0}/Azure/{1}', parameters('recoveryVaultName'), parameters('name'))]",
              "metadata": {
                "description": "The Name of the Protection Container."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('name'))]"
      ]
    },
    {
      "copy": {
        "name": "rsv_backupPolicies",
        "count": "[length(parameters('backupPolicies'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-RSV-BackupPolicy-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "recoveryVaultName": {
            "value": "[parameters('name')]"
          },
          "name": {
            "value": "[parameters('backupPolicies')[copyIndex()].name]"
          },
          "backupPolicyProperties": {
            "value": "[parameters('backupPolicies')[copyIndex()].properties]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "recoveryVaultName": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the Azure Recovery Service Vault"
              }
            },
            "name": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the Azure Recovery Service Vault Backup Policy"
              }
            },
            "backupPolicyProperties": {
              "type": "object",
              "metadata": {
                "description": "Required. Configuration of the Azure Recovery Service Vault Backup Policy"
              }
            },
            "cuaId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Customer Usage Attribution ID (GUID). This GUID must be previously registered"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.RecoveryServices/vaults/backupPolicies",
              "apiVersion": "2021-08-01",
              "name": "[format('{0}/{1}', parameters('recoveryVaultName'), parameters('name'))]",
              "properties": "[parameters('backupPolicyProperties')]"
            },
            {
              "condition": "[not(empty(parameters('cuaId')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}', parameters('cuaId'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the backup policy"
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.RecoveryServices/vaults/backupPolicies', parameters('recoveryVaultName'), parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the backup policy"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The name of the resource group the backup policy was created in."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('name'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('backupConfig')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-RSV-BackupConfig', uniqueString(deployment().name, parameters('location')))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "recoveryVaultName": {
            "value": "[parameters('name')]"
          },
          "name": {
            "value": "[if(contains(parameters('backupConfig'), 'name'), parameters('backupConfig').name, 'vaultconfig')]"
          },
          "enhancedSecurityState": {
            "value": "[if(contains(parameters('backupConfig'), 'enhancedSecurityState'), parameters('backupConfig').enhancedSecurityState, 'Enabled')]"
          },
          "resourceGuardOperationRequests": {
            "value": "[if(contains(parameters('backupConfig'), 'resourceGuardOperationRequests'), parameters('backupConfig').resourceGuardOperationRequests, createArray())]"
          },
          "softDeleteFeatureState": {
            "value": "[if(contains(parameters('backupConfig'), 'softDeleteFeatureState'), parameters('backupConfig').softDeleteFeatureState, 'Enabled')]"
          },
          "storageModelType": {
            "value": "[if(contains(parameters('backupConfig'), 'storageModelType'), parameters('backupConfig').storageModelType, 'GeoRedundant')]"
          },
          "storageType": {
            "value": "[if(contains(parameters('backupConfig'), 'storageType'), parameters('backupConfig').storageType, 'GeoRedundant')]"
          },
          "storageTypeState": {
            "value": "[if(contains(parameters('backupConfig'), 'storageTypeState'), parameters('backupConfig').storageTypeState, 'Locked')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "recoveryVaultName": {
              "type": "string",
              "metadata": {
                "description": "Required. Name of the Azure Recovery Service Vault"
              }
            },
            "name": {
              "type": "string",
              "defaultValue": "vaultconfig",
              "metadata": {
                "description": "Optional. Name of the Azure Recovery Service Vault Backup Policy"
              }
            },
            "enhancedSecurityState": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Disabled",
                "Enabled"
              ],
              "metadata": {
                "description": "Optional. Enable this setting to protect hybrid backups against accidental deletes and add additional layer of authentication for critical operations."
              }
            },
            "resourceGuardOperationRequests": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. ResourceGuard Operation Requests"
              }
            },
            "softDeleteFeatureState": {
              "type": "string",
              "defaultValue": "Enabled",
              "allowedValues": [
                "Disabled",
                "Enabled"
              ],
              "metadata": {
                "description": "Optional. Enable this setting to protect backup data for Azure VM, SQL Server in Azure VM and SAP HANA in Azure VM from accidental deletes"
              }
            },
            "storageModelType": {
              "type": "string",
              "defaultValue": "GeoRedundant",
              "allowedValues": [
                "GeoRedundant",
                "LocallyRedundant",
                "ReadAccessGeoZoneRedundant",
                "ZoneRedundant"
              ],
              "metadata": {
                "description": "Optional. Storage type"
              }
            },
            "storageType": {
              "type": "string",
              "defaultValue": "GeoRedundant",
              "allowedValues": [
                "GeoRedundant",
                "LocallyRedundant",
                "ReadAccessGeoZoneRedundant",
                "ZoneRedundant"
              ],
              "metadata": {
                "description": "Optional. Storage type"
              }
            },
            "storageTypeState": {
              "type": "string",
              "defaultValue": "Locked",
              "allowedValues": [
                "Locked",
                "Unlocked"
              ],
              "metadata": {
                "description": "Optional. Once a machine is registered against a resource, the storageTypeState is always Locked."
              }
            },
            "cuaId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Customer Usage Attribution ID (GUID). This GUID must be previously registered"
              }
            }
          },
          "resources": [
            {
              "type": "Microsoft.RecoveryServices/vaults/backupconfig",
              "apiVersion": "2021-10-01",
              "name": "[format('{0}/{1}', parameters('recoveryVaultName'), parameters('name'))]",
              "properties": {
                "enhancedSecurityState": "[parameters('enhancedSecurityState')]",
                "resourceGuardOperationRequests": "[parameters('resourceGuardOperationRequests')]",
                "softDeleteFeatureState": "[parameters('softDeleteFeatureState')]",
                "storageModelType": "[parameters('storageModelType')]",
                "storageType": "[parameters('storageType')]",
                "storageTypeState": "[parameters('storageTypeState')]"
              }
            },
            {
              "condition": "[not(empty(parameters('cuaId')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}', parameters('cuaId'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the backup config"
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.RecoveryServices/vaults/backupconfig', parameters('recoveryVaultName'), parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the backup config"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The name of the resource group the backup config was created in."
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('name'))]"
      ]
    },
    {
      "copy": {
        "name": "rsv_rbac",
        "count": "[length(parameters('roleAssignments'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-RSV-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalIds": {
            "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
          },
          "roleDefinitionIdOrName": {
            "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.RecoveryServices/vaults', parameters('name'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "principalIds": {
              "type": "array"
            },
            "roleDefinitionIdOrName": {
              "type": "string"
            },
            "resourceId": {
              "type": "string"
            }
          },
          "variables": {
            "builtInRoleNames": {
              "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
              "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
              "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
              "Backup Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '5e467623-bb1f-42f4-a55d-6e525e11384b')]",
              "Backup Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '00c29273-979b-4161-815c-10b084fb9324')]",
              "Backup Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'a795c7a0-d4a2-40c1-ae25-d81f01202912')]",
              "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
              "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
              "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
              "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
              "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
              "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
              "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
              "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
              "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
              "Site Recovery Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '6670b86e-a3f7-4917-ac9b-5d6ab1be4567')]",
              "Site Recovery Operator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '494ae006-db33-4328-bf46-533a6560a3ca')]",
              "Site Recovery Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'dbaa88c4-0c30-4179-9fb3-46319faa6149')]",
              "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]",
              "Virtual Machine Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '9980e02c-c2be-4d73-94e8-173b1dc7cf3c')]"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "roleAssignment",
                "count": "[length(parameters('principalIds'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2021-04-01-preview",
              "scope": "[format('Microsoft.RecoveryServices/vaults/{0}', last(split(parameters('resourceId'), '/')))]",
              "name": "[guid(last(split(parameters('resourceId'), '/')), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
              "properties": {
                "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                "principalId": "[parameters('principalIds')[copyIndex()]]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.RecoveryServices/vaults', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "resourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.RecoveryServices/vaults', parameters('name'))]",
      "metadata": {
        "description": "The resource ID of the recovery services vault"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "The name of the resource group the recovery services vault was created in"
      }
    },
    "name": {
      "type": "string",
      "value": "[parameters('name')]",
      "metadata": {
        "description": "The Name of the recovery services vault"
      }
    },
    "systemAssignedPrincipalId": {
      "type": "string",
      "value": "[if(and(parameters('systemAssignedIdentity'), contains(reference(resourceId('Microsoft.RecoveryServices/vaults', parameters('name')), '2021-12-01', 'full').identity, 'principalId')), reference(resourceId('Microsoft.RecoveryServices/vaults', parameters('name')), '2021-12-01', 'full').identity.principalId, '')]",
      "metadata": {
        "description": "The principal ID of the system assigned identity."
      }
    }
  }
}
