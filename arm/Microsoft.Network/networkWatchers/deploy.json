{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "name": {
      "type": "string",
      "defaultValue": "[format('NetworkWatcher_{0}', parameters('location'))]",
      "minLength": 1,
      "metadata": {
        "description": "Required. Name of the Network Watcher resource (hidden)"
      }
    },
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location for all resources."
      }
    },
    "connectionMonitors": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array that contains the Connection Monitors"
      }
    },
    "flowLogs": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array that contains the Flow Logs"
      }
    },
    "lock": {
      "type": "string",
      "defaultValue": "NotSpecified",
      "metadata": {
        "description": "Optional. Specify the type of lock."
      },
      "allowedValues": [
        "CanNotDelete",
        "NotSpecified",
        "ReadOnly"
      ]
    },
    "roleAssignments": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Tags of the resource."
      }
    },
    "cuaId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Customer Usage Attribution ID (GUID). This GUID must be previously registered"
      }
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/networkWatchers",
      "apiVersion": "2021-05-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {}
    },
    {
      "condition": "[not(equals(parameters('lock'), 'NotSpecified'))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2017-04-01",
      "scope": "[format('Microsoft.Network/networkWatchers/{0}', parameters('name'))]",
      "name": "[format('{0}-{1}-lock', parameters('name'), parameters('lock'))]",
      "properties": {
        "level": "[parameters('lock')]",
        "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkWatchers', parameters('name'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('cuaId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('pid-{0}', parameters('cuaId'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {},
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "copy": {
        "name": "networkWatcher_rbac",
        "count": "[length(parameters('roleAssignments'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-NW-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalIds": {
            "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
          },
          "roleDefinitionIdOrName": {
            "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.Network/networkWatchers', parameters('name'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "principalIds": {
              "type": "array"
            },
            "roleDefinitionIdOrName": {
              "type": "string"
            },
            "resourceId": {
              "type": "string"
            }
          },
          "variables": {
            "builtInRoleNames": {
              "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
              "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
              "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
              "Avere Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4f8fab4f-1852-4a58-a46a-8eaf358af14a')]",
              "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
              "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
              "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
              "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
              "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
              "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
              "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
              "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
              "Network Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
              "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
              "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "roleAssignment",
                "count": "[length(parameters('principalIds'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2021-04-01-preview",
              "scope": "[format('Microsoft.Network/networkWatchers/{0}', last(split(parameters('resourceId'), '/')))]",
              "name": "[guid(last(split(parameters('resourceId'), '/')), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
              "properties": {
                "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                "principalId": "[parameters('principalIds')[copyIndex()]]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkWatchers', parameters('name'))]"
      ]
    },
    {
      "copy": {
        "name": "networkWatcher_connectionMonitors",
        "count": "[length(parameters('connectionMonitors'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-NW-ConnectionMonitor-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "endpoints": {
            "value": "[if(contains(parameters('connectionMonitors')[copyIndex()], 'endpoints'), parameters('connectionMonitors')[copyIndex()].endpoints, createArray())]"
          },
          "name": {
            "value": "[parameters('connectionMonitors')[copyIndex()].name]"
          },
          "networkWatcherName": {
            "value": "[parameters('name')]"
          },
          "testConfigurations": {
            "value": "[if(contains(parameters('connectionMonitors')[copyIndex()], 'testConfigurations'), parameters('connectionMonitors')[copyIndex()].testConfigurations, createArray())]"
          },
          "testGroups": {
            "value": "[if(contains(parameters('connectionMonitors')[copyIndex()], 'testGroups'), parameters('connectionMonitors')[copyIndex()].testGroups, createArray())]"
          },
          "workspaceResourceId": {
            "value": "[if(contains(parameters('connectionMonitors')[copyIndex()], 'workspaceResourceId'), parameters('connectionMonitors')[copyIndex()].workspaceResourceId, '')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "networkWatcherName": {
              "type": "string",
              "defaultValue": "[format('NetworkWatcher_{0}', resourceGroup().location)]",
              "metadata": {
                "description": "Optional. Name of the network watcher resource. Must be in the resource group where the Flow log will be created and same region as the NSG"
              }
            },
            "name": {
              "type": "string",
              "metadata": {
                "description": "Optional. Name of the resource."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Tags of the resource."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "endpoints": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of connection monitor endpoints."
              }
            },
            "testConfigurations": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of connection monitor test configurations."
              }
            },
            "testGroups": {
              "type": "array",
              "defaultValue": [],
              "metadata": {
                "description": "Optional. List of connection monitor test groups."
              }
            },
            "workspaceResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Specify the Log Analytics Workspace Resource ID"
              }
            },
            "cuaId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Customer Usage Attribution ID (GUID). This GUID must be previously registered"
              }
            }
          },
          "variables": {
            "outputs": "[if(not(empty(parameters('workspaceResourceId'))), createArray(createObject('type', 'Workspace', 'workspaceSettings', createObject('workspaceResourceId', parameters('workspaceResourceId')))), null())]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkWatchers/connectionMonitors",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', parameters('networkWatcherName'), parameters('name'))]",
              "tags": "[parameters('tags')]",
              "location": "[parameters('location')]",
              "properties": {
                "endpoints": "[parameters('endpoints')]",
                "testConfigurations": "[parameters('testConfigurations')]",
                "testGroups": "[parameters('testGroups')]",
                "outputs": "[variables('outputs')]"
              }
            },
            {
              "condition": "[not(empty(parameters('cuaId')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}', parameters('cuaId'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the deployed connection monitor"
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkWatchers/connectionMonitors', parameters('networkWatcherName'), parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the deployed connection monitor"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The resource group the connection monitor was deployed into"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkWatchers', parameters('name'))]"
      ]
    },
    {
      "copy": {
        "name": "networkWatcher_flowLogs",
        "count": "[length(parameters('flowLogs'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-NW-FlowLog-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "enabled": {
            "value": "[if(contains(parameters('flowLogs')[copyIndex()], 'enabled'), parameters('flowLogs')[copyIndex()].enabled, true())]"
          },
          "formatVersion": {
            "value": "[if(contains(parameters('flowLogs')[copyIndex()], 'formatVersion'), parameters('flowLogs')[copyIndex()].formatVersion, 2)]"
          },
          "location": {
            "value": "[if(contains(parameters('flowLogs')[copyIndex()], 'location'), parameters('flowLogs')[copyIndex()].location, parameters('location'))]"
          },
          "name": {
            "value": "[if(contains(parameters('flowLogs')[copyIndex()], 'name'), parameters('flowLogs')[copyIndex()].name, format('{0}-{1}-flowlog', last(split(parameters('flowLogs')[copyIndex()].targetResourceId, '/')), split(parameters('flowLogs')[copyIndex()].targetResourceId, '/')[4]))]"
          },
          "networkWatcherName": {
            "value": "[parameters('name')]"
          },
          "retentionInDays": {
            "value": "[if(contains(parameters('flowLogs')[copyIndex()], 'retentionInDays'), parameters('flowLogs')[copyIndex()].retentionInDays, 365)]"
          },
          "storageId": {
            "value": "[parameters('flowLogs')[copyIndex()].storageId]"
          },
          "targetResourceId": {
            "value": "[parameters('flowLogs')[copyIndex()].targetResourceId]"
          },
          "trafficAnalyticsInterval": {
            "value": "[if(contains(parameters('flowLogs')[copyIndex()], 'trafficAnalyticsInterval'), parameters('flowLogs')[copyIndex()].trafficAnalyticsInterval, 60)]"
          },
          "workspaceResourceId": {
            "value": "[if(contains(parameters('flowLogs')[copyIndex()], 'workspaceResourceId'), parameters('flowLogs')[copyIndex()].workspaceResourceId, '')]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "networkWatcherName": {
              "type": "string",
              "defaultValue": "[format('NetworkWatcher_{0}', resourceGroup().location)]",
              "metadata": {
                "description": "Optional. Name of the network watcher resource. Must be in the resource group where the Flow log will be created and same region as the NSG"
              }
            },
            "name": {
              "type": "string",
              "defaultValue": "[format('{0}-{1}-flowlog', last(split(parameters('targetResourceId'), '/')), split(parameters('targetResourceId'), '/')[4])]",
              "metadata": {
                "description": "Optional. Name of the resource."
              }
            },
            "tags": {
              "type": "object",
              "defaultValue": {},
              "metadata": {
                "description": "Optional. Tags of the resource."
              }
            },
            "location": {
              "type": "string",
              "defaultValue": "[resourceGroup().location]",
              "metadata": {
                "description": "Optional. Location for all resources."
              }
            },
            "targetResourceId": {
              "type": "string",
              "metadata": {
                "description": "Required. Resource ID of the NSG that must be enabled for Flow Logs."
              }
            },
            "storageId": {
              "type": "string",
              "metadata": {
                "description": "Required. Resource ID of the diagnostic storage account."
              }
            },
            "enabled": {
              "type": "bool",
              "defaultValue": true,
              "metadata": {
                "description": "Optional. If the flow log should be enabled"
              }
            },
            "formatVersion": {
              "type": "int",
              "defaultValue": 2,
              "allowedValues": [
                1,
                2
              ],
              "metadata": {
                "description": "Optional. The flow log format version"
              }
            },
            "workspaceResourceId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Specify the Log Analytics Workspace Resource ID"
              }
            },
            "trafficAnalyticsInterval": {
              "type": "int",
              "defaultValue": 60,
              "allowedValues": [
                10,
                60
              ],
              "metadata": {
                "description": "Optional. The interval in minutes which would decide how frequently TA service should do flow analytics."
              }
            },
            "retentionInDays": {
              "type": "int",
              "defaultValue": 365,
              "maxValue": 365,
              "minValue": 0,
              "metadata": {
                "description": "Optional. Specifies the number of days that logs will be kept for; a value of 0 will retain data indefinitely."
              }
            },
            "cuaId": {
              "type": "string",
              "defaultValue": "",
              "metadata": {
                "description": "Optional. Customer Usage Attribution ID (GUID). This GUID must be previously registered"
              }
            }
          },
          "variables": {
            "flowAnalyticsConfiguration": "[if(and(not(empty(parameters('workspaceResourceId'))), equals(parameters('enabled'), true())), createObject('networkWatcherFlowAnalyticsConfiguration', createObject('enabled', true(), 'workspaceResourceId', parameters('workspaceResourceId'), 'trafficAnalyticsInterval', parameters('trafficAnalyticsInterval'))), createObject('networkWatcherFlowAnalyticsConfiguration', createObject('enabled', false())))]"
          },
          "resources": [
            {
              "type": "Microsoft.Network/networkWatchers/flowLogs",
              "apiVersion": "2021-03-01",
              "name": "[format('{0}/{1}', parameters('networkWatcherName'), parameters('name'))]",
              "tags": "[parameters('tags')]",
              "location": "[parameters('location')]",
              "properties": {
                "targetResourceId": "[parameters('targetResourceId')]",
                "storageId": "[parameters('storageId')]",
                "enabled": "[parameters('enabled')]",
                "retentionPolicy": {
                  "days": "[parameters('retentionInDays')]",
                  "enabled": "[if(equals(parameters('retentionInDays'), 0), false(), true())]"
                },
                "format": {
                  "type": "JSON",
                  "version": "[parameters('formatVersion')]"
                },
                "flowAnalyticsConfiguration": "[variables('flowAnalyticsConfiguration')]"
              }
            },
            {
              "condition": "[not(empty(parameters('cuaId')))]",
              "type": "Microsoft.Resources/deployments",
              "apiVersion": "2020-10-01",
              "name": "[format('pid-{0}', parameters('cuaId'))]",
              "properties": {
                "expressionEvaluationOptions": {
                  "scope": "inner"
                },
                "mode": "Incremental",
                "parameters": {},
                "template": {
                  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                  "contentVersion": "1.0.0.0",
                  "resources": []
                }
              }
            }
          ],
          "outputs": {
            "name": {
              "type": "string",
              "value": "[parameters('name')]",
              "metadata": {
                "description": "The name of the flow log"
              }
            },
            "resourceId": {
              "type": "string",
              "value": "[resourceId('Microsoft.Network/networkWatchers/flowLogs', parameters('networkWatcherName'), parameters('name'))]",
              "metadata": {
                "description": "The resource ID of the flow log"
              }
            },
            "resourceGroupName": {
              "type": "string",
              "value": "[resourceGroup().name]",
              "metadata": {
                "description": "The resource group the flow log was deployed into"
              }
            }
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/networkWatchers', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "value": "[parameters('name')]",
      "metadata": {
        "description": "The name of the deployed network watcher"
      }
    },
    "resourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/networkWatchers', parameters('name'))]",
      "metadata": {
        "description": "The resource ID of the deployed network watcher"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "The resource group the network watcher was deployed into"
      }
    }
  }
}
