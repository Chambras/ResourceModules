{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]",
      "metadata": {
        "description": "Optional. Location where all resources will be created."
      }
    },
    "name": {
      "type": "string",
      "metadata": {
        "description": "Required. Name of the Virtual Wan."
      }
    },
    "virtualWanSku": {
      "type": "string",
      "defaultValue": "Standard",
      "allowedValues": [
        "Standard",
        "Basic"
      ],
      "metadata": {
        "description": "Optional. Sku of the Virtual Wan."
      }
    },
    "virtualHubName": {
      "type": "string",
      "defaultValue": "SampleVirtualHub",
      "metadata": {
        "description": "Optional. Name of the Virtual Hub. A virtual hub is created inside a virtual wan."
      }
    },
    "vpnGatewayName": {
      "type": "string",
      "defaultValue": "SampleVpnGateway",
      "metadata": {
        "description": "Optional. Name of the Vpn Gateway. A vpn gateway is created inside a virtual hub."
      }
    },
    "vpnSiteName": {
      "type": "string",
      "defaultValue": "SampleVpnSite",
      "metadata": {
        "description": "Optional. Name of the vpnsite. A vpnsite represents the on-premise vpn device. A public ip address is mandatory for a vpn site creation."
      }
    },
    "connectionName": {
      "type": "string",
      "defaultValue": "SampleVpnsiteVpnGwConnection",
      "metadata": {
        "description": "Optional. Name of the vpnconnection. A vpn connection is established between a vpnsite and a vpn gateway."
      }
    },
    "vpnsiteAddressspaceList": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. A list of static routes corresponding to the vpn site. These are configured on the vpn gateway."
      }
    },
    "vpnsitePublicIPAddress": {
      "type": "string",
      "metadata": {
        "description": "Required. he public IP address of a vpn site."
      }
    },
    "vpnsiteBgpAsn": {
      "type": "int",
      "metadata": {
        "description": "Required. The bgp asn number of a vpnsite."
      }
    },
    "vpnsiteBgpPeeringAddress": {
      "type": "string",
      "metadata": {
        "description": "Required. The bgp peer IP address of a vpnsite."
      }
    },
    "addressPrefix": {
      "type": "string",
      "defaultValue": "192.168.0.0/24",
      "metadata": {
        "description": "Optional. The hub address prefix. This address prefix will be used as the address prefix for the hub vnet"
      }
    },
    "enableBgp": {
      "type": "string",
      "defaultValue": "false",
      "allowedValues": [
        "true",
        "false"
      ],
      "metadata": {
        "description": "Optional. his needs to be set to true if BGP needs to enabled on the vpn connection."
      }
    },
    "roleAssignments": {
      "type": "array",
      "defaultValue": [],
      "metadata": {
        "description": "Optional. Array of role assignment objects that contain the 'roleDefinitionIdOrName' and 'principalId' to define RBAC role assignments on this resource. In the roleDefinitionIdOrName attribute, you can provide either the display name of the role definition, or its fully qualified ID in the following format: '/providers/Microsoft.Authorization/roleDefinitions/c2f4ef07-c644-48eb-af81-4b1b4947fb11'"
      }
    },
    "tags": {
      "type": "object",
      "defaultValue": {},
      "metadata": {
        "description": "Optional. Tags of the resource."
      }
    },
    "cuaId": {
      "type": "string",
      "defaultValue": "",
      "metadata": {
        "description": "Optional. Customer Usage Attribution ID (GUID). This GUID must be previously registered"
      }
    },
    "lock": {
      "type": "string",
      "defaultValue": "NotSpecified",
      "metadata": {
        "description": "Optional. Specify the type of lock."
      },
      "allowedValues": [
        "CanNotDelete",
        "NotSpecified",
        "ReadOnly"
      ]
    }
  },
  "resources": [
    {
      "type": "Microsoft.Network/virtualWans",
      "apiVersion": "2021-03-01",
      "name": "[parameters('name')]",
      "location": "[parameters('location')]",
      "tags": "[parameters('tags')]",
      "properties": {
        "type": "[parameters('virtualWanSku')]"
      }
    },
    {
      "condition": "[not(equals(parameters('lock'), 'NotSpecified'))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2017-04-01",
      "scope": "[format('Microsoft.Network/virtualWans/{0}', parameters('name'))]",
      "name": "[format('{0}-{1}-lock', parameters('name'), parameters('lock'))]",
      "properties": {
        "level": "[parameters('lock')]",
        "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualWans', parameters('name'))]"
      ]
    },
    {
      "type": "Microsoft.Network/virtualHubs",
      "apiVersion": "2021-03-01",
      "name": "[parameters('virtualHubName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressPrefix": "[parameters('addressPrefix')]",
        "virtualWan": {
          "id": "[resourceId('Microsoft.Network/virtualWans', parameters('name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualWans', parameters('name'))]"
      ]
    },
    {
      "condition": "[not(equals(parameters('lock'), 'NotSpecified'))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2017-04-01",
      "scope": "[format('Microsoft.Network/virtualHubs/{0}', parameters('virtualHubName'))]",
      "name": "[format('{0}-{1}-lock', parameters('virtualHubName'), parameters('lock'))]",
      "properties": {
        "level": "[parameters('lock')]",
        "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualHubs', parameters('virtualHubName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/vpnSites",
      "apiVersion": "2021-03-01",
      "name": "[parameters('vpnSiteName')]",
      "location": "[parameters('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": "[parameters('vpnsiteAddressspaceList')]"
        },
        "bgpProperties": {
          "asn": "[parameters('vpnsiteBgpAsn')]",
          "bgpPeeringAddress": "[parameters('vpnsiteBgpPeeringAddress')]",
          "peerWeight": 0
        },
        "deviceProperties": {
          "linkSpeedInMbps": 0
        },
        "ipAddress": "[parameters('vpnsitePublicIPAddress')]",
        "virtualWan": {
          "id": "[resourceId('Microsoft.Network/virtualWans', parameters('name'))]"
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualWans', parameters('name'))]"
      ]
    },
    {
      "condition": "[not(equals(parameters('lock'), 'NotSpecified'))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2017-04-01",
      "scope": "[format('Microsoft.Network/vpnSites/{0}', parameters('vpnSiteName'))]",
      "name": "[format('{0}-{1}-lock', parameters('vpnSiteName'), parameters('lock'))]",
      "properties": {
        "level": "[parameters('lock')]",
        "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName'))]"
      ]
    },
    {
      "type": "Microsoft.Network/vpnGateways",
      "apiVersion": "2021-03-01",
      "name": "[parameters('vpnGatewayName')]",
      "location": "[parameters('location')]",
      "properties": {
        "connections": [
          {
            "name": "[parameters('connectionName')]",
            "properties": {
              "connectionBandwidth": 10,
              "enableBgp": "[parameters('enableBgp')]",
              "remoteVpnSite": {
                "id": "[resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName'))]"
              }
            }
          }
        ],
        "virtualHub": {
          "id": "[resourceId('Microsoft.Network/virtualHubs', parameters('virtualHubName'))]"
        },
        "bgpSettings": {
          "asn": 65515
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualHubs', parameters('virtualHubName'))]",
        "[resourceId('Microsoft.Network/vpnSites', parameters('vpnSiteName'))]"
      ]
    },
    {
      "condition": "[not(equals(parameters('lock'), 'NotSpecified'))]",
      "type": "Microsoft.Authorization/locks",
      "apiVersion": "2017-04-01",
      "scope": "[format('Microsoft.Network/vpnGateways/{0}', parameters('vpnGatewayName'))]",
      "name": "[format('{0}-{1}-lock', parameters('vpnGatewayName'), parameters('lock'))]",
      "properties": {
        "level": "[parameters('lock')]",
        "notes": "[if(equals(parameters('lock'), 'CanNotDelete'), 'Cannot delete resource or child resources.', 'Cannot modify the resource or child resources.')]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/vpnGateways', parameters('vpnGatewayName'))]"
      ]
    },
    {
      "condition": "[not(empty(parameters('cuaId')))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('pid-{0}', parameters('cuaId'))]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {},
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "resources": []
        }
      }
    },
    {
      "copy": {
        "name": "virtualWan_rbac",
        "count": "[length(parameters('roleAssignments'))]"
      },
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2020-10-01",
      "name": "[format('{0}-VWan-Rbac-{1}', uniqueString(deployment().name, parameters('location')), copyIndex())]",
      "properties": {
        "expressionEvaluationOptions": {
          "scope": "inner"
        },
        "mode": "Incremental",
        "parameters": {
          "principalIds": {
            "value": "[parameters('roleAssignments')[copyIndex()].principalIds]"
          },
          "roleDefinitionIdOrName": {
            "value": "[parameters('roleAssignments')[copyIndex()].roleDefinitionIdOrName]"
          },
          "resourceId": {
            "value": "[resourceId('Microsoft.Network/virtualWans', parameters('name'))]"
          }
        },
        "template": {
          "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
          "contentVersion": "1.0.0.0",
          "parameters": {
            "principalIds": {
              "type": "array"
            },
            "roleDefinitionIdOrName": {
              "type": "string"
            },
            "resourceId": {
              "type": "string"
            }
          },
          "variables": {
            "builtInRoleNames": {
              "Owner": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
              "Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
              "Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
              "Avere Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4f8fab4f-1852-4a58-a46a-8eaf358af14a')]",
              "Log Analytics Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '92aaf0da-9dab-42b6-94a3-d43ce8d16293')]",
              "Log Analytics Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '73c42c96-874c-492b-b04d-ab87d138a893')]",
              "Managed Application Contributor Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '641177b8-a67a-45b9-a033-47bc880bb21e')]",
              "Managed Application Operator Role": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'c7393b34-138c-406f-901b-d8cf2b17e6ae')]",
              "Managed Applications Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', 'b9331d33-8a36-4f8c-b097-4f54124fdb44')]",
              "Monitoring Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '749f88d5-cbae-40b8-bcfc-e573ddc772fa')]",
              "Monitoring Metrics Publisher": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '3913510d-42f4-4e42-8a64-420c390055eb')]",
              "Monitoring Reader": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '43d0d8ad-25c7-4714-9337-8ba259a9fe05')]",
              "Network Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '4d97b98b-1d4f-4787-a291-c67834d212e7')]",
              "Resource Policy Contributor": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '36243c78-bf99-498c-9df9-86d9f8d28608')]",
              "User Access Administrator": "[subscriptionResourceId('Microsoft.Authorization/roleDefinitions', '18d7d88d-d35e-4fb5-a5c3-7773c20a72d9')]"
            }
          },
          "resources": [
            {
              "copy": {
                "name": "roleAssignment",
                "count": "[length(parameters('principalIds'))]"
              },
              "type": "Microsoft.Authorization/roleAssignments",
              "apiVersion": "2021-04-01-preview",
              "scope": "[format('Microsoft.Network/virtualWans/{0}', last(split(parameters('resourceId'), '/')))]",
              "name": "[guid(last(split(parameters('resourceId'), '/')), parameters('principalIds')[copyIndex()], parameters('roleDefinitionIdOrName'))]",
              "properties": {
                "roleDefinitionId": "[if(contains(variables('builtInRoleNames'), parameters('roleDefinitionIdOrName')), variables('builtInRoleNames')[parameters('roleDefinitionIdOrName')], parameters('roleDefinitionIdOrName'))]",
                "principalId": "[parameters('principalIds')[copyIndex()]]"
              }
            }
          ]
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.Network/virtualWans', parameters('name'))]"
      ]
    }
  ],
  "outputs": {
    "name": {
      "type": "string",
      "value": "[parameters('name')]",
      "metadata": {
        "description": "The name of the virtual WAN"
      }
    },
    "resourceId": {
      "type": "string",
      "value": "[resourceId('Microsoft.Network/virtualWans', parameters('name'))]",
      "metadata": {
        "description": "The resource ID of the virtual WAN"
      }
    },
    "resourceGroupName": {
      "type": "string",
      "value": "[resourceGroup().name]",
      "metadata": {
        "description": "The resource group the virtual WAN was deployed into"
      }
    }
  }
}
